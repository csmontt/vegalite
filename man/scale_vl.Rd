% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scales.r
\encoding{UTF-8}
\name{scale_vl}
\alias{scale_vl}
\alias{scale_x_linear_vl}
\alias{scale_y_linear_vl}
\alias{scale_x_pow_vl}
\alias{scale_y_pow_vl}
\alias{scale_x_sqrt_vl}
\alias{scale_y_sqrt_vl}
\alias{scale_x_log_vl}
\alias{scale_y_log_vl}
\alias{scale_x_quantize_vl}
\alias{scale_y_quantize_vl}
\alias{scale_x_quantile_vl}
\alias{scale_y_quantile_vl}
\alias{scale_x_ordinal_vl}
\alias{scale_y_ordinal_vl}
\alias{scale_x_threshold_vl}
\alias{scale_y_threshold_vl}
\alias{scale_x_time_vl}
\alias{scale_y_time_vl}
\alias{scale_color_nominal_vl}
\alias{scale_color_sequential_vl}
\alias{scale_shape_vl}
\title{Vega-Lite Scales}
\usage{
scale_vl(vl, chnl = "x", type = "linear", domain = NULL, range = NULL,
  scheme = NULL, round = NULL, clamp = NULL, exponent = NULL,
  base = NULL, nice = NULL, zero = NULL, useRawDomain = NULL,
  band_size = NULL, range_step = NULL, padding = NULL,
  interpolate = NULL)

scale_x_linear_vl(vl, ...)

scale_y_linear_vl(vl, ...)

scale_x_pow_vl(vl, ...)

scale_y_pow_vl(vl, ...)

scale_x_sqrt_vl(vl, ...)

scale_y_sqrt_vl(vl, ...)

scale_x_log_vl(vl, ...)

scale_y_log_vl(vl, ...)

scale_x_quantize_vl(vl, ...)

scale_y_quantize_vl(vl, ...)

scale_x_quantile_vl(vl, ...)

scale_y_quantile_vl(vl, ...)

scale_x_ordinal_vl(vl, ...)

scale_y_ordinal_vl(vl, ...)

scale_x_threshold_vl(vl, ...)

scale_y_threshold_vl(vl, ...)

scale_x_time_vl(vl, ...)

scale_y_time_vl(vl, ...)

scale_color_nominal_vl(vl, ...)

scale_color_sequential_vl(vl, type = "ordinal", range = NULL, ...)

scale_shape_vl(vl, range = NULL, ...)
}
\arguments{
\item{vl}{Vega-Lite object}

\item{chnl}{x,y,color,shape}

\item{type}{linear, log, pow, sqrt, quantize, quantile, threshold, time, ordinal}

\item{domain}{Custom domain values. For quantitative data, this can take the
form of a two-element array with minimum and maximum values.}

\item{range}{The range of the scale represents the set of output visual values.
Vega-Lite automatically determines appropriate range based on the scale’s
channel and type, but range property can be provided to customize range
values.}

\item{scheme}{color scheme to use}

\item{round}{If true, rounds numeric output values to integers.}

\item{clamp}{if true, values that exceed the data domain are clamped to either
the minimum or maximum range value. Default value: derived from scale
config (true by default) Supported Types: only linear, pow, sqrt, and log}

\item{exponent}{in the "pow" scale only, expresses each range value y as a power
(exponential) function of the domain value x: y = mx^k + b where k is
 \code{exponent}}

\item{base}{log base to use for log scale}

\item{nice}{If true, modifies the scale domain to use a more human-friendly
number range (e.g., 7 instead of 6.96). Default value: true only for
quantitative x and y scales and false otherwise.}

\item{zero}{If true, ensures that a zero baseline value is included in the
scale domain. Default value: true if the quantitative field is not binned.}

\item{useRawDomain}{If true, set scale domain to the raw data domain. If
false, use the aggregated data domain for scale.}

\item{band_size}{Deprecated -- use range_step instead.}

\item{range_step}{Width for each x or y ordinal band. This can be an integer
value or a string "fit". For "fit", the band size will be
automatically adjusted to fit the scale for the specified width
(for x-axis) or height (for y-axis).}

\item{padding}{For x and y channels, the padding is a multiple of the spacing
between points. A reasonable value is 1.0, such that the first and
last point will be offset from the minimum and maximum value by half
the distance between points. (See D3’s
\href{https://github.com/mbostock/d3/wiki/Ordinal-Scales#ordinal_rangePoints}{ordinalRangePoints()}
for illustration.)}

\item{interpolate}{interpolation method to use for ranges. Legal values
include rgb, hsl, hsl-long, lab, hcl, hcl-long, cubehelix and cubehelix-long}

\item{...}{additional arguments to pass to scale_vl}
}
\description{
Vega-Lite Scales
}
\examples{
vegalite() \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/population.json") \%>\%
  add_filter("datum.year == 2000") \%>\%
  calculate("gender", 'datum.sex == 2 ? "Female" : "Male"') \%>\%
  encode_x("gender", "nominal") \%>\%
  encode_y("people", "quantitative", aggregate="sum") \%>\%
  encode_color("gender", "nominal") \%>\%
  scale_x_ordinal_vl(range_step=8) \%>\%
  scale_color_nominal_vl(range=c("#EA98D2", "#659CCA")) \%>\%
  facet_col("age", "ordinal") \%>\%
  axis_x(remove=TRUE) \%>\%
  axis_y(title="population", grid=FALSE) \%>\%
  view_config(stroke_width=0) \%>\%
  mark_bar()
}
\references{
\href{http://vega.github.io/vega-lite/docs/scale.html}{Vega-Lite Scales spec}
}
