% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mark.r
\encoding{UTF-8}
\name{mark}
\alias{mark}
\alias{mark_bar}
\alias{mark_circle}
\alias{mark_square}
\alias{mark_tick}
\alias{mark_line}
\alias{mark_area}
\alias{mark_point}
\alias{mark_text}
\title{Mark}
\usage{
mark(vl, mark = "circle", filled = NULL, color = NULL, fill = NULL,
  stroke = NULL, opacity = NULL, fillOpacity = NULL,
  strokeOpacity = NULL, strokeWidth = NULL, strokeDash = NULL,
  strokeDashOffset = NULL, stacked = NULL, interpolate = NULL,
  tension = NULL, orient = NULL, barSize = NULL, shape = NULL,
  size = NULL, tickSize = NULL, tickThickness = NULL)

mark_bar(vl, ...)

mark_circle(vl, ...)

mark_square(vl, ...)

mark_tick(vl, ...)

mark_line(vl, ...)

mark_area(vl, ...)

mark_point(vl, ...)

mark_text(vl, ...)
}
\arguments{
\item{vl}{Vega-Lite object}

\item{mark}{can be "bar", "circle", "square", "tick", "line", "area", "point",
and "text". These directly set how the data are drawn and are similar
geoms in ggplot2.}

\item{filled, color, fill, stroke}{see \href{https://vega.github.io/vega-lite/docs/config.html#color}{config.mark color docs}}

\item{opacity, fillOpacity, strokeOpacity}{see \href{https://vega.github.io/vega-lite/docs/config.html#opacity}{config.mark opacity docs}}

\item{strokeWidth, strokeDash, strokeDashOffset}{see \href{https://vega.github.io/vega-lite/docs/config.html#stroke-style}{config.mark stroke docs}}

\item{stacked}{Defunct; Use in \code{\link{encode_x}} or \code{\link{encode_y}}}

\item{interpolate, tension}{for line and area \code{mark}, the line interpolation method.
value for interpolate can be "linear", "step-before", "step-after",
"basis", "basis-open", "basis-closed", "bundle", "cardinal",
"cardinal-open", "cardinal-closed", or "monotone", For tension, see
\href{https://github.com/mbostock/d3/wiki/SVG-Shapes#line_interpolate}{D3's line interpolation}.}

\item{orient}{the orientation of a non-stacked bar, area, and line charts.
The value is either "horizontal", or "vertical" (default). For bar and
tick, this determines whether the size of the bar and tick should be
applied to x or y dimension. For area, this property determines the
orient property of the Vega output. For line, this property determines
the path order of the points in the line if path channel is not specified.
For stacked charts, this is always determined by the orientation of the stack;
therefore explicitly specified value will be ignored.}

\item{barSize}{the size of the bars (width or height depending on \code{orient})}

\item{shape}{applicable to point \code{mark}, "circle", "square", "cross", "diamond",
"triangle-up", or "triangle-down", or else a custom SVG path string.}

\item{size}{for point, circle or square \code{mark}, the pixel area of a point.}

\item{tickSize}{the size of ticks}

\item{tickThickness}{the thickness of ticks.}

\item{...}{additional arguments passed to mark}
}
\description{
A bar mark represents each data point as a rectangle, where the length is
mapped to a quantitative scale.
}
\examples{
dat <- jsonlite::fromJSON('[
    {"a": "A","b": 28}, {"a": "B","b": 55}, {"a": "C","b": 43},
    {"a": "D","b": 91}, {"a": "E","b": 81}, {"a": "F","b": 53},
    {"a": "G","b": 19}, {"a": "H","b": 87}, {"a": "I","b": 52}
  ]')

vegalite() \%>\%
  add_data(dat) \%>\%
  encode_x("a", "ordinal") \%>\%
  encode_y("b", "quantitative") \%>\%
  mark_bar()
vegalite() \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/cars.json") \%>\%
  encode_x("Horsepower", "quantitative") \%>\%
  encode_y("Miles_per_Gallon", "quantitative") \%>\%
  mark_circle()
vegalite() \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/cars.json") \%>\%
  encode_x("Horsepower", "quantitative") \%>\%
  encode_y("Miles_per_Gallon", "quantitative") \%>\%
  mark_circle()
vegalite() \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/cars.json") \%>\%
  encode_x("Horsepower", "quantitative") \%>\%
  encode_y("Miles_per_Gallon", "quantitative") \%>\%
  mark_square()
vegalite() \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/cars.json") \%>\%
  encode_x("Horsepower", "quantitative") \%>\%
  encode_y("Cylinders", "ordinal") \%>\%
  mark_tick()
vegalite() \%>\%
  view_size(300, 300) \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/driving.json") \%>\%
  encode_x("miles", "quantitative") \%>\%
  encode_y("gas", "quantitative") \%>\%
  encode_order("year", "temporal") \%>\%
  scale_x_linear_vl(zero=FALSE) \%>\%
  scale_y_linear_vl(zero=FALSE) \%>\%
  mark_line()
vegalite() \%>\%
  view_size(300, 200) \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/unemployment-across-industries.json") \%>\%
  encode_x("date", "temporal") \%>\%
  encode_y("count", "quantitative", aggregate="sum") \%>\%
  encode_color("series", "nominal") \%>\%
  scale_color_nominal_vl(scheme="category20b") \%>\%
  timeunit_x("yearmonth") \%>\%
  scale_x_time_vl(nice="month") \%>\%
  axis_x(format="\%Y", labelAngle=0) \%>\%
  mark_area()
vegalite() \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/cars.json") \%>\%
  encode_x("Horsepower", "quantitative") \%>\%
  encode_y("Miles_per_Gallon", "quantitative") \%>\%
  mark_point()
vegalite() \%>\%
  view_size(300, 200) \%>\%
  add_data("https://vega.github.io/vega-editor/app/data/cars.json") \%>\%
  encode_x("Horsepower", "quantitative") \%>\%
  encode_y("Miles_per_Gallon", "quantitative") \%>\%
  encode_color("Origin", "nominal") \%>\%
  calculate("OriginInitial", "datum.Origin[0]") \%>\%
  encode_text("OriginInitial", "nominal") \%>\%
  mark_text()
}
\references{
\href{http://vega.github.io/vega-lite/docs/mark.html}{Vega-Lite Mark spec},
\href{https://vega.github.io/vega-lite/docs/config.html#mark-config}{Vega-Lite config.mark spec}
}
